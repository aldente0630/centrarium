---
layout:     post
title:      Wide & Deep Learning for Recommender Systems
date:       2018-04-28 00:00:00
author:     Google Inc.
categories: Data-Science
---  
  
  
**Heng-Tze Cheng, Levent Koc, Jeremiah Harmsen, Tal Shaked, Tushar Chandra,Hrishi Aradhye, Glen Anderson, Greg Corrado, Wei Chai, Mustafa Ispir, Rohan Anil,Zakaria Haque, Lichan Hong, Vihan Jain, Xiaobing Liu, Hemal Shah의 [*Wide & Deep Learning for Recommender Systems*](https://arxiv.org/pdf/1606.07792v1.pdf)을 번역했습니다.**
  
  
- - -
  
## 초록
  
비선형 변수 변환을 적용한 일반화 선형 모형은 입력값이 희소한 대규모 회귀 분석 및 분류 문제에 널리 사용된다. *광범위한* 교차곱 변수 변환을 통한 변수의 교호 작용 암기는 효과적이고 해석하긴 쉽지만 일반화를 위해서 피쳐 엔지니어링에 더 많은 노력이 필요하다. 적은 피쳐 엔지니어링으로 *심층* 신경망은 희소한 변수에 대해 학습한 저차원 임베딩을 통해 눈에 보이지 않는 변수 조합에 대한 일반화를 보다 잘 할 수 있다. 그러나 임베딩을 통한 심층 신경망은 사용자 - 항목 간 교호 작용이 희소하고 계수가 높을 때 지나치게 일반화되어 크게 관련없는 항목을 추천할 수 있다. 이 논문은 추천 시스템에 암기와 일반화 이점을 결합하기 위해 Wide & Deep 학습, 즉 함께 훈련시킨 광범위한 선형 모형 및 심층 신경망를 제시한다. Google은 10억 명이 넘는 활성 사용자와 100만 개가 넘는 앱을 보유한 상용 모바일 앱 스토어 Google Play에 시스템을 구축하고 평가했다. 온라인 실험 결과에 따르면 Wide & Deep은 광범위한 선형 모형만 사용한 것과 심층 신경망만 사용한 것 대비해서 앱 가입을 크게 증가시켰다. 우린 또한 TensorFlow에 오픈소스 구현해놨다.
  
## 1. 개론
  
추천 시스템은 사용자 및 맥락 정보 집합이 입력 질의문이고 품목마다 순위가 매겨진 목록이 출력인 검색 순위 시스템 일종으로 볼 수 있다. 추천 작업은 질의문이 주어졌을 때 데이터베이스에서 관련 품목을 찾고 클릭 또는 구매 같은 특정 목표에 기반하여 품목 순위를 매기는 것이다.
  
추천 검색 시스템의 한 가지 난점은 일반적인 검색 순위 문제와 마찬가지로 *암기*와 *일반화*를 모두 이뤄내는 것이다. 암기는 동시에 빈발하는 품목 또는 특성을 학습하고 과거 내역에서 이용가능한 상관 관계를 뽑아내 대략적인 정의를 내린다. 한편, 일반화는 상관 관계의 이행성(transtivity)에 기반하고 결코 또는 거의 발생하지 않은 새로운 변수 조합을 탐구한다. 암기에 근거한 추천은 보통 사용자가 이미 행동을 취했던 품목과 직접적으로 관련되어 있다. 암기와 비교할 때, 일반화는 추천 품목 다양성을 향상시키는 경향이 있다. 이 글에서는 Google Play 스토어 앱 추천 문제에 초점을 맞추지만 추천 시스템에 일반적으로 적용해볼 수 있다.
  
기업 내 거대 규모의 온라인 추천 및 순위 시스템에선 로지스틱 회귀 같은 일반화된 선형 모형이 간단하고 확장 가능하며 해석하기 쉽기 때문에 널리 사용된다. 종종 one-hot 인코딩을 사용하여 이진화한 희소 변수에 대해 모형 훈련을 진행한다. 예를 들자면 이진값 변수 "user_installed_app = netflix"는 사용자가 Netflix를 설치한 경우 값 1을 가진다. 암기는 AND(user_installed_app = netflix, impression_app = pandora)와 같은 교차곱 변수 변환을 사용하면 효과적으로 얻어낼 수 있다. 사용자가 Netflix를 설치했고 이후 Pandora가 노출됐으면 값은 1이다. 이는 변수 쌍의 동시 발생이 목표 변수 범주와 어떻게 연관되는지를 설명해준다. AND(user_installed_category = video, impression_category = music) 같이 덜 세분화된 변수를 사용해서 일반화할 수 있지만 수작업 피쳐 엔지니어링이 종종 필요하다. 교차곱 변수 변환의 한 가지 한계는 훈련 데이터에 나타나지 않은 질의 품목 변수 쌍을 일반화하진 못한다는 것이다.
  
분해 기계(factorization machine) 또는 심층 신경망 같은 임베딩 기반 모형은 피쳐 엔지니어링에 대한 부담을 줄이면서 질의 및 품목 변수마다 저차원 밀도 임베딩 벡터를 학습하여 이전에 보지 못한 질의-품목 변수 쌍을 일반화할 수 있다. 그러나 특정 선호도를 가진 사용자나 호소력이 적은 틈새 품목 같이 희소하고 계수가 높은 경우 기본 질의-품목 행렬에 대해 저차원 표현으로 질의 및 품목을 효과적으로 학습하는건 어렵다. 그런 경우 대부분 질의-품목 쌍들 간에 교호 작용이 없음에도 밀도 높은 임베딩은 모든 질의-품목 쌍에 대해 0이 아닌 값을 예측할 것이며 따라서 과도하게 일반화되고 별로 관계없는 추천을 할 수 있다. 반면, 교차곱 변수 변환를 통한 선형 모형은 훨씬 적은 수의 매개 변수로 이러한 "예외 규칙"을 암기할 수 있다.
  
본 논문은 그림 1과 같이 선형 모형 구성 요소와 신경망 구성 요소를 함께 학습하여 한 모형 안에서 암기 및 일반화를 모두 달성할 수있는 Wide & Deep 학습 프레임워크를 제시한다.

![Wide & Deep 모형 스펙트럼](https://aldente0630.github.io/assets/wide_&_deep_learning_for_RS1.png)
  
본 논문의 주된 기여는 다음과 같다.
  
* 입력값이 희소한 일반 추천 시스템을 위해 임베딩을 통한 피드-포워드 신경망과 변수 변환을 통한 선형 모형을 함께 훈련시키는 Wide & Deep 학습 프레임워크
* 10억 명 이상의 활성 사용자와 100만 개 넘는 앱이 있는 모바일 앱 스토어 인 Google Play에서 제품화된 Wide & Deep 추천 시스템 구현 및 평가
* TensorFlow 고수준 API를 통한 오프소스 구현[^1]
  
아이디어는 단순하지만 Wide & Deep 프레임워크는 모형 훈련 및 서 속도 요건을 만족시키면서 모바일 앱 스토어 앱 가입율을 크게 향상시켰다.
  
## 2. 추천시스템 개요

앱 추천 시스템에 대한 개요가 그림 2에 나와있다. 사용자가 앱 스토어를 방문하면 사용자 및 맥락 관련된 다양한 변수를 포함하여 질의문이 생성된다. 추천 시스템은 사용자가 클릭이나 구매 같은 특정 동작을 수행할 수 있는 앱 목록(노출이라고도 함)을 반환한다. 사용자 동작은 질의문 및 노출과 함께 학습기를 위한 훈련 데이터로 로그에 기록된다.
  
![추천 시스템 개요](https://aldente0630.github.io/assets/wide_&_deep_learning_for_RS2.png)
  
데이터베이스에는 100만 개가 넘는 앱이 있기 때문에 요구되는 서비스 대기 시간(대부분 \\(O(10)\\) 밀리세컨드)이내로 모든 질의문마다 전체 앱에 점수를 철저히 부여하는건 어렵다. 따라서 질의문을 수신한 후 첫번째 단계는 *검색*이다. 검색 시스템은 다양한 신호(일반적으로 기계 학습 모형과 사람이 정의한 규칙의 조합)를 사용하여 질의문과 가장 일치하는 품목의 짧은 목록을 반환한다. 후보 범위를 줄인 후 순위 시스템은 점수로 모든 품목마다 순위를 매긴다. 점수는  대개 \\(P(y\|\mathbf{x})\\), 즉 사용자 변수(예: 국가, 언어, 인구통계학적), 맥락 변수(예: 기기, 시간대, 요일)와 노출 변수(예: 앱 출시 후 경과 기간, 앱 통계 이력)를 포함하여 변수 \\(\mathbf{x}\\)가 주어졌을 때 사용자 동작 각 범주 \\(y\\)의 확률이다. 본 논문은 Wide & Deep 학습 프레임워크를 사용한 순위 모형에 초점을 맞출 것이다.
  
## 3. Wide & Deep 학습
### 3.1 Wide 구성 요소
  
Wide 구성 요소는 그림 1(좌측)에 그려진 일반화 선형 모형 \\(y=\mathbf{w^Tx}+b\\)의 형태이다. \\(y\\)는 예측, \\(\mathbf{x}=[x_1, x_2, ..., x_d]\\)는 \\(d\\)개의 변수 벡터, \\(\mathbf{w}=[w_1, w_2, ..., w_d]\\)는 모형 파라미터이고 \\(b\\)는 편의이다. 변수 집합은 원천 입력값들과 변환한 변수들을 포함한다. 가장 중요한 변환 중 하나는 다음과 같이 정의되는 *교차곱 변환*이다.
\\( \phi_k(\mathbf{x})=\prod_{i=1}^d x^{c_{ki}}_i c_{ki}\in\{0,1\} \\)
여기서 \\(c_{ki})\\는 

[^1]: [http://tensorflow.org](https://tensorflowkorea.gitbooks.io/tensorflow-kr/content/g3doc/tutorials/wide_and_deep)의 Wide & Deep 튜토리얼을 보라.
