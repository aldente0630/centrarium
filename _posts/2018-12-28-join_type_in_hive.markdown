---
layout: post
title: 하이브에서의 조인 유형
date: 2018-12-28 00:00:00
author: Weidong Zhou
categories: Data-Engineering
---  
  
  
**Weidong Zhou의 [*Join Type in Hive: Common Join 외 3편*](https://weidongzhou.wordpress.com/2017/06/06/join-type-in-hive-common-join)을 번역했습니다.**
  
  
- - -

# 1. 일반 조인
  
하이브 쿼리의 성능 튜닝 중 하나의 영역은 실행 중에 조인 유형에주의를 기울여야합니다. 오라클의 조인 유형과 마찬가지로 다양한 유형의 실행 시간이 크게 다를 수 있습니다. 다음 몇 블로그에서 하이브의 조인 유형에 대해 논의 할 것입니다. 첫 번째 조인 유형은 **공통 조인**입니다.
  
**공통 조인**은 하이브의 기본 조인 유형으로 **셔플 조인** 또는 **분산 조인** 또는 **정렬 병합 조인**이라고도합니다. 조인 중에 두 테이블의 모든 행이 조인 키를 기반으로 모든 노드에 분산됩니다. 이 방법으로 동일한 조인 키의 값이 같은 노드에서 끝납니다. 이 조인에는 Map / Reduce의 전체주기가 있습니다.

**작동 원리**
1. 맵핑 단계에서 맵퍼는 테이블을 읽고 결합 열 값을 키로 출력합니다. 키 - 값 쌍은 중간 파일에 기록됩니다.
2. 셔플 단계에서 이러한 쌍이 정렬되고 병합됩니다. 동일한 키의 모든 행이 동일한 축소 기 인스턴스로 전송됩니다.
3. 감축 단계에서 감속기는 정렬 된 데이터를 가져 와서 조인을 수행합니다.

**공통 조인**의 장점은 모든 테이블 크기에서 작동한다는 것입니다. 그러나 셔플은 값 비싼 작업이기 때문에 자원 집약적입니다. 하나 이상의 조인 키가 데이터의 비율이 상당히 큰 경우 해당 감속비가 과부하됩니다. 문제의 증상은 대다수의 감속기가 조인 작업을 완료했지만 일부 감속기가 계속 실행되고 있다는 것입니다. 쿼리의 총 실행 시간은 실행 시간이 가장 긴 감속기에 의해 결정됩니다. 분명히 이것은 일반적으로 왜곡 된 데이터 문제입니다. 나중의 블로그에서 이런 종류의 왜곡 된 문제에 대해서만 특별 참여를 논의 할 것입니다.

**조인을 식별하는 방법**
**EXPLAIN** 명령을 사용하면 **운영자 줄이기** 바로 아래에 **Join Operator**가 표시됩니다.
