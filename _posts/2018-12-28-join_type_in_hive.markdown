---
layout: post
title: 하이브에서의 조인 유형
date: 2018-12-28 00:00:00
author: Weidong Zhou
categories: Data-Engineering
---  
  
  
**Weidong Zhou의 [*Join Type in Hive: Common Join 외 3편*](https://weidongzhou.wordpress.com/2017/06/06/join-type-in-hive-common-join)을 번역했습니다.**
  
  
- - -

# 1. 일반 조인
  
하이브 쿼리 성능 튜닝에서 신경써야할 부분 중 하나는 쿼리 실행 시 이뤄지는 조인의 유형이다. 오라클의 조인 유형과 마찬가지로 여러 유형에 따라 실행 시간이 크게 달라질 수 있다. 몇 번의 연재에 걸쳐 하이브의 조인 유형에 대해 논의할 것이다. 조인 유형 첫 번째는 **일반 조인**이다.
  
**일반 조인**은 하이브의 기본적인 조인 유형으로 **셔플 조인**, **분산 조인** 또는 **정렬 병합 조인**이라고도한다. 조인 작업 동안 두 테이블의 모든 행을 조인 키 기반으로 전체 노드에 분산시킨다. 이 과정을 통해 조인 키가 동일한 값들은 동일한 노드에서 작업이 종료된다. 해당 조인 작업은 맵 / 리듀스의 온전한 주기를 갖는다.
  
![그림1](https://aldente0630.github.io/assets/join_type_in_hive1.jpg)
  
**작동 원리**
1. 맵 단계에서 맵퍼는 테이블을 읽고 조인 컬럼 값을 키로 정해 출력한다. 키 - 값 쌍을 중간 파일에 기록한다.
2. 셔플 단계에서 이러한 쌍을 정렬하고 병합한다. 동일한 키의 모든 행을 동일한 리듀스 인스턴스로 전송한다.
3. 리듀스 단계에서 리듀서는 정렬한 데이터를 가져와 조인을 수행한다.

**일반 조인**의 장점은 테이블 크기와 상관없이 작동한다는 점이다. 그러나 셔플은 비용이 매우 큰 작업이기에 자원을 많이 잡아먹는다. 데이터에서 소수의 조인 키가 차지하는 비율이 매우 큰 경우 해당 리듀서에 과부하가 걸리게된다. 대다수의 리듀서에서 조인 작업이 완료됐지만 일부 리듀서가 계속 실행되는 식으로 문제의 증상이 나타난다. 쿼리의 총 실행 시간은 실행 시간이 가장 긴 리듀서로 결정된다. 분명히 이건 전형적인 **데이터 비대칭** 문제이다. 다음 블로그에서 이러한 비대칭 문제을 다루는 특수 조인에 대해 논할 것이다.

**조인을 식별하는 방법**  
**EXPLAIN** 명령을 사용하면 **리듀스 오퍼레이터 트리** 바로 밑에 **조인 오퍼레이터**가 표시된다.
  
# 2. 맵 조인

(번역 중)
  

