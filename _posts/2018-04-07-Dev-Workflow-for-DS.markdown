---
layout: post
title:  Development Workflows for Data Scientists
date:   2018-04-08 21:00:00
author: Ciara Byrne
categories: Data-Science
---  
  
  
**Ciara Byrne의 [*Development Workflows for Data Scientists: Enabling Fast, Efficient, and Reproducible Results for Data Science Teams*](https://resources.github.com/downloads/development-workflows-data-scientists.pdf)을 번역했습니다.**
  
  
- - -
## 데이터 과학자를 위한 개발 작업 흐름
  
  
  소프트웨어 개발 고전인 *The Mythical Man Month* 저자 [Fred Brooks에 따르면](https://www.fastcompany.com/3023543/why-good-programming-projects-go-bad?show_rev_content) 엔지니어는 빌드하기 위해 배우는 반면 과학자는 배우기 위해 빌드한다. "데이터 과학"이라는 용어에 "과학'이란 단어가 붙은 건 실수가 아니다. 엔지니어나 소프트웨어 개발자 작업과 달리 데이터 과학 프로젝트 결과물은 코드가 아니다. 결과물은 쓸모있는 통찰이다. 
  
  "데이터 과학자는 개발자와 매우 다른 형태로 코딩과 연관을 맺습니다." Alluvium의 CEO이자 [해커 스타일로 배우는 기계학습](http://shop.oreilly.com/product/0636920018483.do)의 공저자인 [Drew Conway가 말한다.](https://www.fastcompany.com/3016160/what-hackers-should-know-about-machine-learning?show_rev_content) Conway는 계속 얘기한다.  
> 저는 코딩을 관심있는 질문에 대해 통찰을 얻기 위한 도구로 봅니다. 사용한 코드는 어느 정도 1회성입니다. 개발자는 더 큰 시스템 내에서 빌드할 목적으로 코드를 작성합니다. 그들은 어떻게 하면 재사용할 수 있게 작성할까 고민하지요.

  그러나 데이터 과학자는 쓸모있는 통찰을 얻기 위해 코드를 종종 작성하며 통찰은 쉽게 사용될 수 있게 코드 형태로 포장된다. 그 결과 데이터 과학 팀들은 업무 향상을 위해 소프트웨어 모범 사례를 차용하고 있다. 그러나 어떤 모범 사례가 데이터 과학과 가장 관련있을까? 어떤 데이터 과학자 영역에서 새로운 모범 사례 개발이 필요할까? 데이터 과학 팀은 어떻게 작업흐름을 향상시켰고 어떤 이익을 봤을까? 이게 이 보고서가 답하고자 하는 질문들이다.

  내가 얘기 나눴던 데이터 과학자 대다수는 당신이 무엇을 빌드할까 좋은 아이디어를 이미 갖고 있다면 소프트웨어 개발 모범 사례가 매우 유용하리라고 본다. 프로젝트 초반 데이터 과학자는 그게 뭔지 늘 알지 못한다. "프로젝트 범위를 사전에 알기 어렵기 때문에 데이터 과학 프로젝트를 계획하는 건 까다로울 수 있습니다." Conway는 말한다. "프로젝트 종료 기준을 정하기 위해 반드시 치뤄야 하는 탐색적 자료 분석 또는 실험의 영(0) 단계가 종종 있지요."

## 좋은 데이터 과학 작업 흐름이란 무엇일까?

  [작업 흐름이란](http://www.pnmsoft.com/resources/bpm-tutorial/workflow-tutorial/) 사람과 시스템 간 작업 및 정보 조율을 목적으로 업무 절차를 정의하고 실행하고 자동화하는 걸 뜻한다. 소프트웨어 개발에서는 계획, 개발, 테스트, 통합, 배포 그리고 이것들을 연결하는 작업 흐름이 수십 년 동안 진화해왔다. 데이터 과학은 신생 분야이므로 절차들이 여전히 유동적이다.

  특정 팀에게 좋은 작업 흐름이란 작업을 보다 신속하고 효율적이고 정확하고 순응적이고 민첩하고 투명하고 재현 가능하게 만들어주는지 여부와는 관계없다. 그건 해당 팀의 작업, 목표와 가치에 따라 다르다. 서로 다른 목표와 가치 사이에는 상충 관계가 종종 있다. 신속하게 성과물을 얻고 싶은가, 아니면 다음 번에 신속한 성과를 내기 위해 지금은 시간을 투자하고 싶은가? 작업 흐름을 정의하고 적용하고 자동화하는 이유에 대해 여러 데이터 과학 팀에게 질문했다.

### 결과를 빨리 내기위해

  인터넷 데이터 기반으로 위협 정보 피드 또는 보안 보고서를 제공하는 스위스 사이버 보안 기업 [BinaryEdge](https://www.binaryedge.io/) 데이터 과학 팀은 엄격하고 객관적이고 재현 가능한 데이터 과학 절차를 만들고 싶어했다. 이 팀은 유효 기간이 있는 데이터로 작업하기 때문에 초기 결과를 신속하게 만든 다음에야 일반적인 함정을 피하며 데이터를 철저하게 분석할 수 있다. 얻은 지식을 가능한 가장 유용한 형태로 전달하는 걸 팀은 최종 과제로 여긴다. 
  
  또한 팀은 어떤 결론도 이끌어내지 못했더라도 특정 결과에 도달하기 위해 수행했던 단계 모두를 기록하길 원한다. 그렇지 않으면 막다른 곳이라고 증명하기 위해 이미 탐색했던 이득을 장차 잃어버리게 될 것이다. 회사 내 데이터 과학자는 프로젝트 탐색 단계에서 실행한 모든 단계, 사용한 도구, 데이터 원천과 도달한 결론을 기록하며 코드북을 생성한다.
  
  BinaryEdge팀이 익숙한 형식(데이터 구조를 *선험적으로* 알고 있는)에서 작업할 경우 작업 흐름 중 대부분 단계는 자동화되었다. 새로운 유형의 데이터를 처리하는 경우 먼저 작업 흐름 단계 모두를 수동으로 실행하며 데이터에서 지식을 최대한 이끌어낸다.

### 결과를 재현하고 재사용하기 위해
  
  재현성은 소프트웨어 개발의 재사용성만큼이나 과학에서 교리처럼 중요하지만 데이터 과학 프로젝트에서는 종종 둘 다 고려해야 할 사항이다. Airbnb는 재현과 재사용을 위해 이전 데이터 과학 작업을 쉽게 찾아낼 수 있도록 [힘을 합쳐 노력했다.](https://medium.com/airbnb-engineering/scaling-knowledge-at-airbnb-875d73eff091) 이 회사는 데이터 과학 작업에 기여하고 평가하는 절차를 정의하고 데이터 과학 팀 너머로 작업을 잘 공유할 수 있게 [*Knowledge Repo*](https://github.com/airbnb/knowledge-repo)라는 도구를 만들었다. 
  
  Airbnb는 데이터 과학자가 Knowledge Repo에 새로운 작업을 추가하고 이를 검색할 수 있도록 특별한 작업 흐름을 도입했다. Knowledge Repo 핵심 관리자 인 Nikki Ray가 말한다. "기본적으로 단기와 장기 비용의 균형을 맞춰야 했습니다." Ray는 부연한다.
> 단기적으로 당신은 특정 양식을 통과하고 좀 더 긴 실제 검토 주기를 거쳐야 합니다. 하지만 장기적으로 당신은 질문에 덜 대답해도되고 연구는 나중에 다른 사람이 찾을 수 있게 한 곳에 둡니다.

  [GitHub](https://github.com/) 기계 학습 팀은 기계 학습 및 빅데이터 기술을 사용하여 사용자 지향 기능을 구현한다. 재사용은 팀 우선 순위 중 하나다. "우린 각자의 작업 위로 빌드를 시도합니다." 데이터 제품 팀 데이터 과학자 Ho-Hsiang Wu는 말한다. "우리는 모형을 개선하기 위해 각 모형으로 돌아가 별도의 반복을 해볼 수 있습니다."
  
  데이터 과학 업무 흐름을 개선하기 위해 생성한 도구 또한 재사용할 수 있다. "재사용하고 다른 도구와 결합하기 위해 기존 코드가 Python, R 또는 Java로 짜여있더라도 명령행 도구로 쉽사리 바꿀 수 있습니다." [Data Science Workshop](https://datascienceworkshops.com/) 창립자이자 [*Data Science at Command Line*](https://resources.github.com/downloads/development-workflows-data-scientists.pdf) 저자인 Jeroen Janssens는 얘기한다. "GitHub 덕택에 도구를 다른 세상 사람들과 공유하거나 다른 이가 만든 도구를 쉽게 찾을 수 있습니다."
 
(번역 중)
